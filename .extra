#!/bin/bash
# TODO: add these back to main files?

# organize stuff by day
daily_dir () {
    if [ ! -d ~/daily ]
    then
        mkdir ~/daily
    fi

    if [ ! -d ~/daily/"$(date +%Y%m%d)" ]
    then mkdir ~/daily/"$(date +%Y%m%d)"
    fi

    cd ~/daily/"$(date +%Y%m%d)"
}

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

source "$HOME/.tmux.completion"

# try real hard to keep ur key loaded
unset SSH_AUTH_SOCK
for PATHNAME in "/tmp/ssh-"*"/agent."* "/var/folders/"*"/"*"/"*"/ssh-"*"/agent."*
do
    if [ ! -w "$PATHNAME" ]
    then continue
    fi
    if [ "$(SSH_AUTH_SOCK="$PATHNAME" ssh-add -l 2>&1)" != "Could not open a connection to your authentication agent." ]
    then export SSH_AUTH_SOCK="$PATHNAME"
    else
        rm -f "$PATHNAME"
        rmdir "$(dirname "$PATHNAME")" 2>"/dev/null" || :
    fi
done
if [ -z "$SSH_AUTH_SOCK" ]
then
    eval "$(ssh-agent)"
    ssh-add
fi
if [ "$SSH_AUTH_SOCK" != "$HOME/.ssh/agent" ]
then ln -fs "$SSH_AUTH_SOCK" "$HOME/.ssh/agent"
fi
export SSH_AUTH_SOCK="$HOME/.ssh/agent"

export CHEF_REPO="$HOME/src/chef-repo"
export WEBAPP_REPO="$HOME/src/webapp"

#get rid of old branches
alias gitclear="git fetch -p"

# show the newest branches last
alias gitbr="git for-each-ref --sort=committerdate refs/heads/ | awk -F'/' '{ print \$NF }'"
alias branches='for k in `git branch|sed "s/^..//"`;do echo -e `git log --color -1 --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" "$k"`\\t"$k";done|sort'
alias gb='git for-each-ref --sort=-committerdate refs/heads/ --format="%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) -  (%(color:green)%(committerdate:relative)%(color:reset))"'

# knife search wrapper
ks () {
    # build a string we can eval at the end
    HAYSTACK="knife node list"
    for ARG in "${@}"
    do
        HAYSTACK="$HAYSTACK | grep \"$ARG\" | sort -V"
    done
    OUTPUT=$(eval "$HAYSTACK")
    # If there in only one host show the detailed view
    if [ "$(echo "$OUTPUT" | wc -w)" -eq 1 ]
    then knife node show "$OUTPUT"
    else echo "$OUTPUT"
    fi
}

# history grep (sorry mercurial users)
# freestyle ANDing for all args
hg () {
    GREP_STRING="history"
    for ARG in "${@}"
    do GREP_STRING="$GREP_STRING | grep \"$ARG\""
    done
    eval "$GREP_STRING"
}

activate () {
	#cd "$HOME/src/chef-repo"
    source "$HOME/src/chef-repo/.virtualenv/bin/activate"
}

f () {
    find . -name "*$1*"
}

beg () {
    less -p "$1" "$2"
}

